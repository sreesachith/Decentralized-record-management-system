{"ast":null,"code":"var _jsxFileName = \"/home/aditi/Downloads/capstone/Decentralized-record-management-system/storage using ipfs with login/frontend/src/components/FileList.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nfunction FileList() {\n  const [username, setUsername] = useState('');\n  const [files, setFiles] = useState([]);\n  const [message, setMessage] = useState('');\n  const onUsernameChange = e => {\n    setUsername(e.target.value);\n  };\n  const fetchFiles = async () => {\n    if (!username) {\n      setMessage('Please enter a username.');\n      return;\n    }\n    try {\n      const response = await axios.get(`http://localhost:5000/api/files/${username}`); // Update API call to include username\n      setFiles(response.data.files);\n      setMessage(''); // Clear message on successful fetch\n    } catch (error) {\n      setMessage('Error fetching files. Please check the username and try again.');\n      console.error('Error fetching files:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Uploaded Files\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Username\",\n    value: username,\n    onChange: onUsernameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Fetch Files\"), message && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }, message), \" \", files.length > 0 && /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, files.map(file => /*#__PURE__*/React.createElement(\"li\", {\n    key: file._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `https://ipfs.io/ipfs/${file.cid}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, file.name), \" (\", file.size, \" bytes)\"))));\n}\nexport default FileList;","map":{"version":3,"names":["React","useEffect","useState","axios","FileList","username","setUsername","files","setFiles","message","setMessage","onUsernameChange","e","target","value","fetchFiles","response","get","data","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","length","map","file","key","_id","href","cid","rel","name","size"],"sources":["/home/aditi/Downloads/capstone/Decentralized-record-management-system/storage using ipfs with login/frontend/src/components/FileList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction FileList() {\r\n  const [username, setUsername] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const onUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const fetchFiles = async () => {\r\n    if (!username) {\r\n      setMessage('Please enter a username.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/files/${username}`); // Update API call to include username\r\n      setFiles(response.data.files);\r\n      setMessage(''); // Clear message on successful fetch\r\n    } catch (error) {\r\n      setMessage('Error fetching files. Please check the username and try again.');\r\n      console.error('Error fetching files:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-list\">\r\n      <h2>Uploaded Files</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Username\"\r\n        value={username}\r\n        onChange={onUsernameChange}\r\n      />\r\n      <button onClick={fetchFiles}>Fetch Files</button>\r\n\r\n      {message && <p>{message}</p>} {/* Display messages to the user */}\r\n\r\n      {files.length > 0 && (\r\n        <ul>\r\n          {files.map(file => (\r\n            <li key={file._id}>\r\n              <a href={`https://ipfs.io/ipfs/${file.cid}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {file.name}\r\n              </a> ({file.size} bytes)\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}