{"ast":null,"code":"var _jsxFileName = \"/home/aditi/Downloads/capstone/Decentralized-record-management-system/storage using ipfs with login/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport FileUpload from './components/FileUpload';\nimport FileList from './components/FileList';\nimport AdminFileList from './components/AdminFileList';\nimport Login from './components/Login';\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  // Check if token and role exist in localStorage on component mount\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const role = localStorage.getItem('role');\n    if (token) {\n      setIsAuthenticated(true);\n      setIsAdmin(role === 'admin'); // Set admin state based on role\n    }\n  }, []);\n  const handleLogin = () => {\n    const role = localStorage.getItem('role');\n    setIsAuthenticated(true);\n    setIsAdmin(role === 'admin'); // Check role after login\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token'); // Remove the token from localStorage\n    localStorage.removeItem('role'); // Remove the role from localStorage\n    setIsAuthenticated(false); // Set authenticated state to false\n    setIsAdmin(false); // Set admin state to false\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    style: headerStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: headingStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"File Management System\"), isAuthenticated && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    style: logoutButtonStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Logout\")), isAuthenticated ? isAdmin ? /*#__PURE__*/React.createElement(AdminFileList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }) // Show AdminFileList if the user is an admin\n  : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FileUpload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FileList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Login, {\n    onLogin: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }));\n}\n\n// Styles for the header\nconst headerStyles = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  padding: '10px 20px',\n  backgroundColor: '#007bff',\n  color: '#fff',\n  borderRadius: '8px',\n  marginBottom: '20px'\n};\n\n// Styles for the heading\nconst headingStyles = {\n  fontSize: '2rem',\n  margin: 0,\n  fontFamily: \"'Arial', sans-serif\"\n};\n\n// Styles for the logout button\nconst logoutButtonStyles = {\n  backgroundColor: '#fff',\n  color: '#007bff',\n  border: 'none',\n  padding: '8px 16px',\n  borderRadius: '4px',\n  cursor: 'pointer',\n  fontSize: '1rem',\n  fontWeight: 'bold'\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","FileUpload","FileList","AdminFileList","Login","App","isAuthenticated","setIsAuthenticated","isAdmin","setIsAdmin","token","localStorage","getItem","role","handleLogin","handleLogout","removeItem","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","headerStyles","headingStyles","onClick","logoutButtonStyles","Fragment","onLogin","display","justifyContent","alignItems","padding","backgroundColor","color","borderRadius","marginBottom","fontSize","margin","fontFamily","border","cursor","fontWeight"],"sources":["/home/aditi/Downloads/capstone/Decentralized-record-management-system/storage using ipfs with login/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FileUpload from './components/FileUpload';\r\nimport FileList from './components/FileList';\r\nimport AdminFileList from './components/AdminFileList';\r\nimport Login from './components/Login';\r\n\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  // Check if token and role exist in localStorage on component mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const role = localStorage.getItem('role');\r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n      setIsAdmin(role === 'admin'); // Set admin state based on role\r\n    }\r\n  }, []);\r\n\r\n  const handleLogin = () => {\r\n    const role = localStorage.getItem('role');\r\n    setIsAuthenticated(true);\r\n    setIsAdmin(role === 'admin'); // Check role after login\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token'); // Remove the token from localStorage\r\n    localStorage.removeItem('role'); // Remove the role from localStorage\r\n    setIsAuthenticated(false); // Set authenticated state to false\r\n    setIsAdmin(false); // Set admin state to false\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header style={headerStyles}>\r\n        <h1 style={headingStyles}>File Management System</h1>\r\n        {isAuthenticated && (\r\n          <button onClick={handleLogout} style={logoutButtonStyles}>\r\n            Logout\r\n          </button>\r\n        )}\r\n      </header>\r\n      {isAuthenticated ? (\r\n        isAdmin ? (\r\n          <AdminFileList /> // Show AdminFileList if the user is an admin\r\n        ) : (\r\n          <>\r\n            <FileUpload />\r\n            <FileList />\r\n          </>\r\n        )\r\n      ) : (\r\n        <Login onLogin={handleLogin} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Styles for the header\r\nconst headerStyles = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: '10px 20px',\r\n  backgroundColor: '#007bff',\r\n  color: '#fff',\r\n  borderRadius: '8px',\r\n  marginBottom: '20px',\r\n};\r\n\r\n// Styles for the heading\r\nconst headingStyles = {\r\n  fontSize: '2rem',\r\n  margin: 0,\r\n  fontFamily: \"'Arial', sans-serif\",\r\n};\r\n\r\n// Styles for the logout button\r\nconst logoutButtonStyles = {\r\n  backgroundColor: '#fff',\r\n  color: '#007bff',\r\n  border: 'none',\r\n  padding: '8px 16px',\r\n  borderRadius: '4px',\r\n  cursor: 'pointer',\r\n  fontSize: '1rem',\r\n  fontWeight: 'bold',\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}